(ns rosalind.problems.revc-test
  (:require
   [clojure.test :refer [deftest testing is]]
   [rosalind.problems.revc :refer [solve-revc]]))


(deftest solve-revc-test
  (testing "solve-revc-sample-test"
    (let [sample (slurp "resources/inputs/rosalind_revc_sample.txt")
          expected "ACCGGGTTTT"]
      (is (= expected
             (solve-revc sample)))))

  (testing "solve-revc-test"
    (let [data (slurp "resources/inputs/rosalind_revc.txt")
          expected "GTCATTTATAACGGCAACCTTCTTGTCCGCTTTAATGGCGGAAGGGGCCGTACTCCGTAGGAATCGGGGAAAAGAATGAGCCTCCAAGCCCCCTCACACTCCGCAAAGAGTCTTCATAGTTGTAAAACCGTCCAATATCCCCTGTACTAGTTGTTATGGTTGGGGCTGAGCAAATCATATGTTAATGGAGTACTTGTTGCCCGCGTGTAGAATCGCTAGGATACCCTGTGTCAGCGGTATCTACTAACAAAATTTTTAGTTTGGCTGTCCACACCACGTAGTCCGTTCTTACGTACAGGAGTCCATAATCGACACGGGTTGCTGATGTACAACGGATTGCCGCGCTCAGACCTCACATATGGGCCTGGCCGCGCCTTCTAGCTATGCTGTTCAGCCTTAACCTCAGTCAGATATCCGCCCACGAATATAGTACTCGTTGTAGTGATCATTTACTATTAGTGTAGCCAACACGCGGACCGTAATACGAGGTTATATGTAACGTTCATCACTCGTCTCGGACCGGACCTGGACCAGAGGAATGTGATCATCGCAGGGGCTTGCACTAGACGCAGCAGGTTTCTTACGAACCAGTGTGCACGCGACTCCTTGAAACCGTGAGCCAGCGCGGGAGCAATACATGAGACAATGAGAAAAGATCCGCTTTACTAAGACGGTCAGTGCACTGTTAAGAGCTGAGTAGCTTTCATTTGAAAGAGCTGGGACTCTTGACAGGCAAGAAGGCTATGTGACGTAAGGTACTTGTATCTGTTACGGGTGTTCATAATGTCCCTTGCCGGGTACGCCCCCTTACATCCAGACTCAAGGACCAGTGGCTCGCGAAACACCTCCCGTCCATATCTTTGTGGCGGTCCTTGTAAGCCCTGTAAAATCTCAGTAAGGCTCAAGCGCGCTTTGGTCATACTGGGGAACAAAAACGTACCGTGCCTACGTCTGACCCGCTACGGGTTCATCGGCGGGTCCTA"]
      (is (= expected
             (solve-revc data))))))